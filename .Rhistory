sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
# 3.1.1 Process Size
cpu_gpu_data %>% group_by(Type) %>% summarize(quantile = quantile(Process_Size_nm, c(0.25, 0.75), prob = c(0.25, 0.75)),
mean = mean(Process_Size_nm),
sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
# 3.1.1 Process Size
cpu_gpu_data %>% group_by(Type) %>% summarize(quantile = quantile(Process_Size_nm, c(0.25, 0.75), prob = c(0.25, 0.75)),
mean = mean(Process_Size_nm), sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Process_Size_nm),
sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
# Process Size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) + geom_boxplot()
# Process Size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
geom_boxplot(main="Process Size")
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
ylab("Process Size") + geom_boxplot()
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
ylab("Process Size") + geom_boxplot + coord_flip()
# Process Size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
ylab("Process Size") + geom_boxplot() + coord_flip()
cpu_gpu_data
colnames(cpu_gpu_data)
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(TDP_W),
sd = sd(TDP_W), median = median(TDP_W), max = max(TDP_W),
min = min(TDP_W))
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Process_Size_nm),
sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
# Process Size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
ylab("Process Size") + geom_boxplot() + coord_flip()
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(TDP_W),
sd = sd(TDP_W), median = median(TDP_W), max = max(TDP_W),
min = min(TDP_W))
# TDP: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
ylab("Process Size") + geom_boxplot() + coord_flip()
cpu_gpu_data
names(cpu_gpu_data)
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Die_Size_mm^2),
sd = sd(Die_Size_mm^2), median = median(Die_Size_mm^2), max = max(Die_Size_mm^2),
min = min(Die_Size_mm^2))
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Die_Size_mm2),
sd = sd(Die_Size_mm2), median = median(Die_Size_mm2), max = max(Die_Size_mm2),
min = min(Die_Size_mm2))
names(cpu_gpu_data)[6] = "Die_Size_mm2"
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Die_Size_mm2),
sd = sd(Die_Size_mm2), median = median(Die_Size_mm2), max = max(Die_Size_mm2),
min = min(Die_Size_mm2))
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(TDP_W),
sd = sd(TDP_W), median = median(TDP_W), max = max(TDP_W),
min = min(TDP_W))
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_boxplot() + coord_flip()
Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram()
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(alpha=.5)
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(binwidth=1)
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(binwidth=100)
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(bins=100)
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(bins=50)
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(bins=50) +geom_density(alpha=.2, fill=Type)
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, fill=Type)) +
ylab("Process Size") + geom_histogram(bins=50) +geom_density(alpha=.2)
cpu_gpu_data %>% ggplot(aes(x=Die_Size_mm2, color=Type)) +
geom_histogram(fill="white", position = "dodge", bins=50) +
theme(legend.position="top")
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Die_Size_mm2),
sd = sd(Die_Size_mm2), median = median(Die_Size_mm2), max = max(Die_Size_mm2),
min = min(Die_Size_mm2))
cpu_gpu_data <- read_csv('chip_dataset.csv')
str(cpu_gpu_data)
cpu_gpu_data <- select(cpu_gpu_data, -c('...1'))
names(cpu_gpu_data)[3] = "Release_Date"
names(cpu_gpu_data)[4] = "Process_Size_nm"
names(cpu_gpu_data)[5] = "TDP_W"
names(cpu_gpu_data)[6] = "Die_Size_mm2"
names(cpu_gpu_data)[7] = "Transistors_million"
names(cpu_gpu_data)[8] = "Freq_MHz"
names(cpu_gpu_data)[11] = "FP16_GFLOPS"
names(cpu_gpu_data)[12] = "FP32_GFLOPS"
names(cpu_gpu_data)[13] = "FP64_GFLOPS"
cpu_gpu_data
# Replace missing GFLOPS with -1
cpu_gpu_data[["FP16_GFLOPS"]][is.na(cpu_gpu_data[["FP16_GFLOPS"]])] <- -1
cpu_gpu_data[["FP32_GFLOPS"]][is.na(cpu_gpu_data[["FP32_GFLOPS"]])] <- -1
cpu_gpu_data[["FP64_GFLOPS"]][is.na(cpu_gpu_data[["FP64_GFLOPS"]])] <- -1
# Replace missing GFLOPS with -1
cpu_gpu_data[["FP16_GFLOPS"]][is.na(cpu_gpu_data[["FP16_GFLOPS"]])] <- -1
cpu_gpu_data[["FP32_GFLOPS"]][is.na(cpu_gpu_data[["FP32_GFLOPS"]])] <- -1
cpu_gpu_data[["FP64_GFLOPS"]][is.na(cpu_gpu_data[["FP64_GFLOPS"]])] <- -1
cpu_gpu_data %>% sapply(function(x) sum(is.na(x)))
cpu_gpu_data <- replace(cpu_gpu_data, TRUE, lapply(cpu_gpu_data, na.aggregate))
cpu_gpu_data %>% sapply(function(x) sum(is.na(x)))
cpu_gpu_data <- cpu_gpu_data[cpu_gpu_data$Release_Date != "NaT",]
cpu_gpu_data <- cpu_gpu_data[cpu_gpu_data$Process_Size_nm != 0,]
examples_CPU <= nrow(cpu_gpu_data[cpu_gpu_data$Type == 'CPU',])
examples_GPU <- nrow(cpu_gpu_data) - examples_CPU
slices <- c(examples_CPU, examples_GPU)
pct <- round(slices/sum(slices)*100)
lbls <- c('CPU', 'GPU')
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
pie(slices, labels = lbls)
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Process_Size_nm),
sd = sd(Process_Size_nm), median = median(Process_Size_nm), max = max(Process_Size_nm),
min = min(Process_Size_nm))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Process_Size_nm, fill=Type)) +
ylab("Process Size") + geom_boxplot() + coord_flip()
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(TDP_W),
sd = sd(TDP_W), median = median(TDP_W), max = max(TDP_W),
min = min(TDP_W))
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Die_Size_mm2),
sd = sd(Die_Size_mm2), median = median(Die_Size_mm2), max = max(Die_Size_mm2),
min = min(Die_Size_mm2))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data
names(cpu_gpu_data)
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Transistors_million),
sd = sd(Transistors_million), median = median(Transistors_million), max = max(Transistors_million),
min = min(Transistors_million))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=Transistors_million, fill=Type)) +
geom_histogram() + coord_flip()
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Transistors_million, fill=Type)) +
geom_histogram()
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() + scale_y_continuous()
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$Transistors_million, c(0.1, 0.9)))
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$Transistors_million, c(0, 0.95)))
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Transistors_million),
sd = sd(Transistors_million), median = median(Transistors_million), max = max(Transistors_million),
min = min(Transistors_million))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$Transistors_million, c(0, 0.97)))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
geom_boxplot() + coord_flip()
# Transistors: Summary
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Transistors_million),
sd = sd(Transistors_million), median = median(Transistors_million), max = max(Transistors_million),
min = min(Transistors_million))
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$Transistors_million, c(0, 0.97)))
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip()
# Die size: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Transistors_million, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$Transistors_million, c(0, 0.97)))
cpu_gpu_data %>% sapply(function(x) sum(is.na(x)))
cpu_gpu_data[cpu_gpu_data$Transistors_million > 30000]
cpu_gpu_data[cpu_gpu_data$Transistors_million > 30000,]
cpu_gpu_data[cpu_gpu_data$Transistors_million > 20000,]
cpu_gpu_data[cpu_gpu_data$Transistors_million > 30000,]
cpu_gpu_data[cpu_gpu_data$Transistors_million > 30000,]$Release_Date
cpu_gpu_data[cpu_gpu_data$Transistors_million > 20000,]$Release_Date
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Release_Date
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Type
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Release_Date
unique(cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Type)
unique(cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Vendor)
unique(cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Foundry)
unique(cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Foundry)
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$TDP_W
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Die_Size_mm2
cpu_gpu_data[cpu_gpu_data$Transistors_million > 25000,]$Process_Size_nm
cpu_gpu_data
names(cpu_gpu_data)
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Freq_MHz),
sd = sd(Freq_MHz), median = median(Freq_MHz), max = max(Freq_MHz),
min = min(Freq_MHz))
# Frequency: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=Freq_MHz, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(Freq_MHz),
sd = sd(Freq_MHz), median = median(Freq_MHz), max = max(Freq_MHz),
min = min(Freq_MHz))
names(cpu_gpu_data)
cpu_gpu_data %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip()
# Frequency: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$FP16_GFLOPS, c(0, 0.97)))
# Frequency: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip() +
scale_y_continuous(limits = quantile(cpu_gpu_data$FP16_GFLOPS, c(0, 0.90)))
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0] %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip()
# Frequency: Boxplot
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0,] %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% ggplot(aes(x=Type, y=FP16_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% ggplot(aes(x=Type, y=FP32_GFLOPS, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% ggplot(aes(x=FP32_GFLOPS)) +
geom_bhistogram() + coord_flip()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% ggplot(aes(x=FP32_GFLOPS)) +
geom_histogram() + coord_flip()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% ggplot(aes(x=FP32_GFLOPS)) +
geom_histogram()
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,]
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,][12]
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,][13]
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0,] %>% summarize(mean = mean(FP16_GFLOPS),
sd = sd(FP16_GFLOPS), median = median(FP16_GFLOPS), max = max(FP16_GFLOPS),
min = min(FP16_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0,] %>% summarize(mean = mean(FP16_GFLOPS),
sd = sd(FP16_GFLOPS), median = median(FP16_GFLOPS), max = max(FP16_GFLOPS),
min = min(FP16_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% summarize(mean = mean(FP32_GFLOPS),
sd = sd(FP32_GFLOPS), median = median(FP32_GFLOPS), max = max(FP32_GFLOPS),
min = min(FP32_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP64_GFLOPS > 0,] %>% summarize(mean = mean(FP64_GFLOPS),
sd = sd(FP64_GFLOPS), median = median(FP64_GFLOPS), max = max(FP64_GFLOPS),
min = min(FP64_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0,] %>% summarize(mean = mean(FP16_GFLOPS),
sd = sd(FP16_GFLOPS), median = median(FP16_GFLOPS), max = max(FP16_GFLOPS),
min = min(FP16_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% summarize(mean = mean(FP32_GFLOPS),
sd = sd(FP32_GFLOPS), median = median(FP32_GFLOPS), max = max(FP32_GFLOPS),
min = min(FP32_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP16_GFLOPS > 0,] %>% summarize(mean = mean(FP16_GFLOPS),
sd = sd(FP16_GFLOPS), median = median(FP16_GFLOPS), max = max(FP16_GFLOPS),
min = min(FP16_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP32_GFLOPS > 0,] %>% summarize(mean = mean(FP32_GFLOPS),
sd = sd(FP32_GFLOPS), median = median(FP32_GFLOPS), max = max(FP32_GFLOPS),
min = min(FP32_GFLOPS))
cpu_gpu_data[cpu_gpu_data$FP64_GFLOPS > 0,] %>% summarize(mean = mean(FP64_GFLOPS),
sd = sd(FP64_GFLOPS), median = median(FP64_GFLOPS), max = max(FP64_GFLOPS),
min = min(FP64_GFLOPS))
# Frequency: histogram
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_histogram() + coord_flip()
# Frequency: histogram
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_density()
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_density(alpha=.5)
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_histogram(bins=100)
# Frequency: histogram
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_histogram(bins=50, alpha=.5)
cpu_gpu_data %>% ggplot(aes(x=Freq_MHz, fill=Type)) +
geom_density(alpha=.5)
# TDP: Boxplot
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_density(alpha=.7)
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_density(alpha=.7)
plot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_density()
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_density()
cpu_gpu_data
cpu_gpu_data$TDP_W
cpu_gpu_data %>% group_by(Type) %>% summarize(mean = mean(TDP_W),
sd = sd(TDP_W), median = median(TDP_W), max = max(TDP_W),
min = min(TDP_W))
lot
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_density()
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=Type, y=TDP_W, fill=Type)) +
geom_histogram() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, fill=Type)) +
geom_histogram() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, fill=Type)) +
geom_histogram()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, fill=Type)) +
geom_density()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, fill=Type)) +
geom_density(alpha=.5)
cpu_gpu_data %>% ggplot(aes(x=TDP_W, fill=Type)) +
geom_point()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, y=Type, fill=Type)) +
geom_point()
names(cpu_gpu_data)
unique(cpu_gpu_data$Vendor)
unique(cpu_gpu_data$Foundry)
group_by(cpu_gpu_data, Vendor)
cpu_gpu_data %>% ggplot(aes(x=Type, y=Die_Size_mm2, fill=Type)) +
geom_boxplot() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type)) +
geom_point() + coord_flip()
cpu_gpu_data %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
# TDP vs Die Size
cpu_gpu_data %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point(alpha = .5) + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point(alpha = .5) + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point(alpha = .5) + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
# TDP vs Die Size (CPU)
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
'GPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
# TDP vs Die Size (CPU)
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>% ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill=Type, color=Type)) +
geom_point() + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point()
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point() + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(alpha.3)
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(alpha=.3)
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point() + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2, color = blue)) +
geom_point()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2, color = 'blue')) +
geom_point()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2, color = "blue")) +
geom_point()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2, fill = "blue")) +
geom_point()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "blue")
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue")
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen") + coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue")
cor(cpu_gpu_data$TDP_W, cpu_gpu_data$Die_Size_mm2)
tmp_gpu <- cpu_gpu_data[cpu_gpu_data$Type == 'GPU',]
tmp_cpu <- cpu_gpu_data[cpu_gpu_data$Type == 'CPU',]
cor(tmp_cpu$TDP_W, tmp_cpu$Die_Size_mm2)
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue")
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2)
cor.test(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2)
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = c("pearson", "kendall", "spearman"))
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = spearman")
)
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = "spearman")
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = "lendall")
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = "kendall")
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = "pearson")
cor(tmp_cpu$TDP_W, tmp_cpu$Die_Size_mm2, method = "spearman")
cor(tmp_cpu$TDP_W, tmp_cpu$Die_Size_mm2, method = "kendall")
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen") + coord_flip()
# TDP vs Die Size (GPU)
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen", alpha = .3)
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue", alpha = .5)
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue", alpha = .5) +
ggtitle("TDP & Die Size (CPU)")
cpu_gpu_data[cpu_gpu_data$Type == 'CPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "dodgerblue", alpha = .5) +
ggtitle("TDP & Die Size (CPU)")
tmp_cpu <- cpu_gpu_data[cpu_gpu_data$Type == 'CPU',]
cor(tmp_cpu$TDP_W, tmp_cpu, method = "pearson")
tmp_cpu <- cpu_gpu_data[cpu_gpu_data$Type == 'CPU',]
cor(tmp_cpu$TDP_W, tmp_cpu$Die_Size_mm2, method = "pearson")
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen", alpha = .3)
cor(tmp_cpu$TDP_W, tmp_cpu$Die_Size_mm2, method = "pearson")
cor(tmp_cpu$Die_Size_mm2, tmp_cpu$TDP_W, method = "pearson")
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen", alpha = .3) +
coord_flip()
cpu_gpu_data[cpu_gpu_data$Type == 'GPU',] %>%
ggplot(aes(x=TDP_W, y=Die_Size_mm2)) +
geom_point(col = "darkseagreen", alpha = .3) +
coord_flip() +
ggtitle("TDP & Die Size (GPU)")
tmp_gpu <- cpu_gpu_data[cpu_gpu_data$Type == 'GPU',]
cor(tmp_gpu$TDP_W, tmp_gpu$Die_Size_mm2, method = "pearson")
AMD_df <- cpu_gpu_data[cpu_gpu_data$Vendor == 'AMD',]
AMD_df
AMD_df %>% group_by(Foundry) %>% summarise(count = n())
AMD_GPU_df <- cpu_gpu_data[cpu_gpu_data$Vendor == 'AMD' & cpu_gpu_data$Type == 'GPU',]
AMD_GPU_df %>% group_by(Foundry) %>% summarise(count = n())
AMD_GPU_df <- cpu_gpu_data[cpu_gpu_data$Vendor == 'AMD' & cpu_gpu_data$Type == 'CPU',]
AMD_GPU_df %>% group_by(Foundry) %>% summarise(count = n())
cpu_gpu_data %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count")
cpu_gpu_data[cpu_gpu_data$Vendor == "AMD",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count")
cpu_gpu_data[cpu_gpu_data$Vendor == "Intel",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count")
cpu_gpu_data[cpu_gpu_data$Vendor == "NVIDIA",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count")
cpu_gpu_data[cpu_gpu_data$Vendor == "NVIDIA",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count")
cpu_gpu_data[cpu_gpu_data$Vendor == "NVIDIA",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("NVIDIA Foundry Preference")
# Intel Foundry preferences
cpu_gpu_data[cpu_gpu_data$Vendor == "Intel",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
cpu_gpu_data %>% group_by(Vendor) %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
cpu_gpu_data %>% group_by(Vendor) %>% ggplot(aes(x=Foundry, fill=Vendor)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
cpu_gpu_data[cpu_gpu_data$Vendor == "AMD",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
cpu_gpu_data %>% group_by(Vendor) %>% ggplot(aes(x=Foundry, fill=Vendor)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
# AMD Foundry preferences
cpu_gpu_data[cpu_gpu_data$Vendor == "AMD",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("AMD Foundry Preference")
p <- cpu_gpu_data[cpu_gpu_data$Vendor == "Intel",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
# AMD Foundry preferences
p + cpu_gpu_data[cpu_gpu_data$Vendor == "AMD",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("AMD Foundry Preference")
p <- cpu_gpu_data[cpu_gpu_data$Vendor == "Intel",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
p
p + cpu_gpu_data %>% group_by(Vendor) %>% ggplot(aes(x=Foundry, fill=Vendor)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
p <- cpu_gpu_data[cpu_gpu_data$Vendor == "NVIDIA",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("NVIDIA Foundry Preference")
p + cpu_gpu_data[cpu_gpu_data$Vendor == "Intel",] %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Intel Foundry Preference")
cpu_gpu_data %>% ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Foundry Preference") +
facet_wrap(~Vendor)
cpu_gpu_data[cpu_gpu_data$Vendor != 'ATI' || cpu_gpu_data$Vendor != 'Other'] %>%
ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Foundry Preference") +
facet_wrap(~Vendor)
cpu_gpu_data %>%
ggplot(aes(x=Foundry, fill=Type)) +
geom_bar(stat="count") + ggtitle("Foundry Preference") +
facet_wrap(~Vendor)
cpu_gpu_data
unique(cpu_gpu_data)
unique(cpu_gpu_data$Foundry)
sum(cpu_gpu_data[cpu_gpu_data$Foundry < 100,])
tabel(cpu_gpu_data$Foundry)
tabel(cpu_gpu_data$Foundry)
table(cpu_gpu_data$Foundry)
project_dir <- Sys.getenv("PROJECT_DIR")
project_dir
project_dir <- Sys.getenv("PROJECT_DIR")
project_dir
